:root {
  /* Netural */
  --grey: hsl(0, 0%, 50%);
  --grey-1: hsl(0, 0%, 30%);
  --grey-2: hsl(0, 0%, 15%);
  --grey-3: hsl(0, 0%, 10%);

  /* Blues */
  --Blue-1: hsl(234, 100%, 50%);
  --Blue-2: hsl(234, 100%, 35%);
  --Blue-3: hsl(234, 100%, 20%);
  /* Cyans */
  --Cyan-1: hsl(202, 100%, 50%);
  --Cyan-2: hsl(202, 100%, 35%);
  --Cyan-3: hsl(202, 100%, 20%);
}
/* The overall container at the bottom of the screen */
.ViewPageContainer {
  display: flex;
  align-items: center;
  background-color: #0a0a0a;
  width: 100vw;
  height: 200vh;
  box-sizing: border-box;
}
/* The graph container */
.GraphContainer {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 55vw;
  height: 65vh;

  left: 7%;
  bottom: 25%;
  border: 5px solid #008ad3;
  border-radius: 5px;
}
/* The switch buttons under the graph */
.GraphSwitchContainer {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: space-between;
  top: 99%;
}

.GraphSwitchContainer button {
  width: 10vw;
  height: 7vh;
  border: 2px solid #00d4ff;
  border-radius: 10px;
  margin: 15px;
  background-color: Transparent;
  color: #00d4ff;
  font-size: 1.5rem;
  position: relative;
  z-index: 1;
  overflow: hidden;
  cursor: pointer;
  transition: 1s ease-in-out background-color, 1s ease-in-out color;
}
.GraphSwitchContainer button:hover {
  background-color: #008ad3;
  color: #1b1b1b;
}
/* The percentage container */
.PercentageContainer {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  left: 15%;
  bottom: 15%;
  width: 25vw;
  height: 95vh;
}
/* Holds the text based data at the bottom of the page */
.DataContainer {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  width: 100%;
  height: 40%;
  bottom: -75vh;
}
/* The data containers*/
.Data {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
}

.Data h1 {
  position: relative;
  color: #00c4f8;
  left: -100px;
  z-index: 1;
}
/* Glowing h1 bar */
.Data h1::after {
  content: "";
  background-color: #008ad3;
  height: 5px;
  width: 100%;
  bottom: 0;
  left: 0;
  position: absolute;
  z-index: -1;
  box-shadow: 0 -10px 20px #008ad3;
}

.Data h3 {
  position: relative;
  font-size: 1.7em;
}
/* Button container html is inside of the graph and pushed down */
.ButtonContainer {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  bottom: -38%;
}
/* Button styles */
.ButtonContainer button {
  width: 40%;
  height: 150px;
  border-radius: 20px;
  border: none;
  margin: 15px;
  background-color: #00c4f8;
  color: #1b1b1b;
  font-size: 1.5rem;
  position: relative;
  z-index: 1;
  overflow: hidden;
  cursor: pointer;
  transition: 0.5s ease-in-out background-color;
}

.ButtonContainer button:hover {
  background-color: #008ad3;
}

/* On styles */
.On {
  box-shadow: 0 0px 20px rgb(0, 14, 41), 0 0px 30px rgb(0, 94, 231),
    0 0px 40px rgb(0, 212, 255);
}
/* Percentage chart */
#pie {
  /* Changes the angle the graident goes to */
  --ng: 360deg;
  /* The thickness or the non transperent area of the gradient */
  --thickness: 10px;
  --_inner: calc(70% - var(--thickness));
  --_outer: calc(var(--_inner) + 1px);

  /* Uses the inner and outer values to hide or fill in the center leaving only the thickness*/
  mask: radial-gradient(circle, #0000 var(--_inner), #000 var(--_outer));

  /* the conic gradient, transparent after --ng */
  background-image: conic-gradient(#000e29, #005ee7, #00d4ff, #0000 0);

  background-color: hsla(0, 0%, 5%, 0.5);
}

#pie {
  aspect-ratio: 1/1;
  inline-size: 30vmin;
  border-radius: 50%;
}

/* Styles for the bar chart container */
.BarChart {
  --item-gap: 0;
  --padding-block: 1.5rem;
  width: 100%;
  height: 100%;
  display: grid;
  position: relative;
  color: white;
  grid-auto-flow: column;
  gap: var(--item-gap);
  align-items: end;
  padding-inline: var(--item-gap);
  padding-block: var(--padding-block);
}
/* The indivdual bars */
.BarChart > .item {
  height: calc(1% * var(--val));
  background-color: var(--clr);
  filter: drop-shadow(0 0 1rem var(--Shadow--clr));
  position: relative;
  animation: item-height 3s ease forwards;
}
@keyframes item-height {
  from {
    height: 0;
  }
}
/* Text position */
.BarChart > .item > * {
  position: absolute;
  text-align: center;
}
.BarChart > .item > .label {
  inset: 100% 0 auto 0;
}
.BarChart > .item > .value {
  inset: auto 0 100% 0;
}

.DayChart {
  width: 100%;
  height: 100%;
  z-index: 500;
}
